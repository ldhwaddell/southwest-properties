generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model apartments_dot_com_listings {
  id                                    String                                  @id @db.VarChar(7)
  available                             Boolean?
  created_at                            DateTime?                               @default(now()) @db.Timestamptz(6)
  url                                   String?                                 @db.VarChar
  address                               String?                                 @db.VarChar
  building                              String?                                 @db.VarChar
  monthly_rent                          String?                                 @db.VarChar
  bedrooms                              String?                                 @db.VarChar
  bathrooms                             String?                                 @db.VarChar
  square_feet                           String?                                 @db.VarChar
  about                                 String?
  description                           String?
  amenities                             String?
  fees                                  String?
  apartments_dot_com_listings_histories apartments_dot_com_listings_histories[]
}

model apartments_dot_com_listings_histories {
  id                          Int                         @id @default(autoincrement())
  listing_id                  String                      @db.VarChar(7)
  created_at                  DateTime?                   @default(now()) @db.Timestamptz(6)
  changed                     String?                     @db.VarChar
  original                    String?
  updated                     String?
  apartments_dot_com_listings apartments_dot_com_listings @relation(fields: [listing_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model application_histories {
  id             Int          @id @default(autoincrement())
  application_id String       @db.VarChar(64)
  created_at     DateTime?    @default(now()) @db.Timestamptz(6)
  changed        String?      @db.VarChar
  original       String?
  updated        String?
  applications   applications @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model applications {
  id                                 String                  @id @db.VarChar(64)
  active                             Boolean?
  created_at                         DateTime?               @default(now()) @db.Timestamptz(6)
  url                                String?                 @db.VarChar
  title                              String?
  summary                            String?
  last_updated                       DateTime?               @db.Timestamptz(6)
  update_notice                      String?
  request                            String?
  proposal                           String?
  process                            String?
  status                             String?
  documents_submitted_for_evaluation String?
  contact_info                       String?
  application_histories              application_histories[]
}

model fourfourfourrent_listings {
  id                                  String                                @id @db.VarChar(64)
  available                           Boolean?
  created_at                          DateTime?                             @default(now()) @db.Timestamptz(6)
  management                          String?                               @db.VarChar
  url                                 String?                               @db.VarChar
  address                             String?                               @db.VarChar
  building                            String?                               @db.VarChar
  unit                                String?                               @db.VarChar
  location                            String?                               @db.VarChar
  square_feet                         Float?
  available_date                      String?                               @db.VarChar
  price                               Float?
  rooms                               String?                               @db.VarChar
  leasing_info                        String?
  description_info                    String?
  building_info                       String?
  suite_info                          String?
  fourfourfourrent_listings_histories fourfourfourrent_listings_histories[]
}

model fourfourfourrent_listings_histories {
  id                        Int                       @id @default(autoincrement())
  listing_id                String                    @db.VarChar(64)
  created_at                DateTime?                 @default(now()) @db.Timestamptz(6)
  changed                   String?                   @db.VarChar
  original                  String?
  updated                   String?
  fourfourfourrent_listings fourfourfourrent_listings @relation(fields: [listing_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

